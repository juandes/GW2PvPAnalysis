confint(fit1)
View(sparkdata)
x = c(0,1,3,2)
y = c(0,1,2,3)
df = data.frame(x,y)
predict(fit1,data.frame(lstat=c(5,10,15)),interval="confidence")df
df
?Boston
plot(V2~V1,df)
fit1=lm(V2~V1,data=df)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
names(Boston)
?Boston
plot(V2~V1,df)
fit1=lm(V2~V1,data=df)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
x = c(0,1,3,2)
y = c(0,1,2,3)
df = data.frame(x,y)
names(Boston)
?Boston
plot(V2~V1,df)
fit1=lm(V2~V1,data=df)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
?colnames
colnames(df) <- c("v1", "v2")
names(Boston)
?Boston
plot(v2~v1,df)
fit1=lm(v2~v1,data=df)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
names(Boston)
?Boston
plot(V2~V1,sparkdata)
fit1=lm(V2~V1,data=sparkdata)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
x <- c(0.64514742748,0.646460546735,0.652429270622,0.647654291512,0.651641399069,0.644574429987,0.640515697744,0.653408141339,0.66193147905,0.67066969082,0.670216067805,0.653527515817,0.659543989495,0.662910349767,0.668115076997,0.655007759341,0.652835143846,0.646412796944,0.649540408261,0.645815924555,0.650256655127,0.642640563448,0.638701205682,0.652572519995,0.651426525009,0.650972901994,0.665130715053,0.6654172138,0.6584457443,0.651856273129,0.616115554494,0.615160558673,0.60830846365,0.62943774621,0.622633400979,0.624304643667,0.626023636147,0.620818908917,0.624137519398,0.63249373284,0.635191596037,0.634594723648,0.648609287334,0.650017906172,0.673224304644,0.661095857706,0.665106840158,0.677354661573,0.679813775815,0.67850065656,0.678906529784,0.677736659902,0.671242688313,0.68026739883,0.677665035215,0.895690581354,1.0,0.920711471887,0.861644980303,0.831944610242)
sparkdata$x <- x
plot(x~V1,sparkdata)
fit1=lm(x~V1,data=sparkdata)
fit1
summary(fit1)
abline(fit1,col="red")
names(fit1)
confint(fit1)
plot(x~V1,sparkdata)
library(ggplot)
library(ggplot2)
p <- qplot(V1,V2, data = sparkdata)
p + geom_abline*()
p + geom_abline()
sparkdata[V2,]
sparkdata[,V2]
sparkdata$V2
sparkdata$V2[1:56]
sparkdata$V2[1:55]
mean(sparkdata$V2[1:55])
mean(sparkdata$V2[1:55])
sparkdata$V2[1:55]
sparkdata$V2[0:55]
sparkdata$V2[0:60]
sparkdata$V2[1:60]
sparkdata$V2[1:55]
sparkdata$V2[1:55]
mean(sparkdata$V2[1:55])
mean(sparkdata$V2[56:60])
sparkdata$V2[56:60]
mean(sparkdata$V2[56:60])
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
p <- qplot(V1,V2, data = sparkdata)
p + geom_abline()
p + labs(x = " Minute", y = "Number of visitors")
p + ggtitle("Number of visitors by minute")
library(ggplot2)
p <- qplot(V1,V2, data = sparkdata)
p + geom_abline()
p + labs(x = " Minute", y = "Number of visitors", title = "Number of visitors by minute")
load("pokemontypesdf.RData")
setwd("~/Development/R/PokemonData")
load("pokemontypesdf.RData")
View(types)
setwd("~/Development/R/GW2PvPAnalysis")
GW2_PvP_data <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv")
View(GW2_PvP_data)
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", header=FALSE)
View(df)
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv")
View(df)
clear
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv")
View(df)
df$RED_1
df[1]
df$RED_1[df$RED_1 == 'ran'] <- 6
df$RED_1[df$RED_1 == 'ran']
df
View(df)
df$RED_1[df$RED_1 == 'ran'] <- 6
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
View(df)
df$RED_1
df$WINNER
?apply
?lapply
sapply(1:3, function(x) if x > 3)
sapply(1:3, function(x) x^2)
?colnames
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
View(df)
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
View(df)
df$winner[df$red_score > df$blue_score] <- 0
View(df)
df$winner[df$red_score < df$blue_score] <- 1
View(df)
View(df)
summary(df$winner)
df$winner
table(df$winner)
?tabl
?table
df$RED_1[df$RED_1 == 'ele'] <- 1
df$RED_1[df$RED_1 = 'ele'] <- 1
df$RED_1[df$RED_1 == 'ele'] <- 1
df$red_1[df$red_1 == 'ele'] <- 1
View(df)
View(df)
df[0]
df[1]
df[df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
View(df)
df[5:14][df[5:14] == 'engi'] <- 2
df[5:14][df[5:14] == 'g'] <- 3
df[5:14][df[5:14] == 'mes'] <- 4
df[5:14][df[5:14] == 'necro'] <- 5
df[5:14][df[5:14] == 'ran'] <- 6
View(df)
df[5:14][df[5:14] == 't'] <- 7
View(df)
df[5:14][df[5:14] == 'war'] <- 8
View(df)
prop.table(table$map)
prop.table(table(df$map)
)
table(df$map)
prop.table(table(df$map))
summary(df)
hist(df$map)
ggplot(df$map,aes(x=(ordered_Levels), y = Freq)) +
geom_bar(binwidth=1, stat="identity", fill="#705848") +
theme(axis.text.x = element_text(angle = 90, vjust = 1)) +
xlab("Secondary types") + ylab("Frequency of secondary types") +
ggtitle("Frequency of secondary types on Dark type Pok?mon")
library(ggplot2)
ggplot(df$map,aes(x=(ordered_Levels), y = Freq)) +
geom_bar(binwidth=1, stat="identity", fill="#705848") +
theme(axis.text.x = element_text(angle = 90, vjust = 1)) +
xlab("Secondary types") + ylab("Frequency of secondary types") +
ggtitle("Frequency of secondary types on Dark type Pok?mon")
qplot(df$map,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Age",
xlab = "Age",
fill=I("blue"))
qplot(df$map,
geom="histogram",
main = "Histogram for Age",
xlab = "Age",
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram for Age",
xlab = "Age",
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Age",
ylab = "Frequency"
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
labels=c("foo","bar","baz","phi","fum"),
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
labels=c("foo","bar","baz","phi"),
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(breaks = 1:5, labels=c("foo","bar","baz","phi","fum")),
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(breaks = 1:4, labels=c("foo","bar","baz","phi")),
fill=I("blue"))
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(labels=c("foo","bar","baz","phi")),
fill=I("blue"))
ylab = "Frequency",
qplot(df$map,
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
fill=I("blue"))
qplot(factor(df$map),
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(breaks = 1:4, labels=c("foo","bar","baz","phi")),
fill=I("blue"))
scale_x_discrete(breaks = 1:5, labels=c("foo","bar","baz","phi")),
qplot(factor(df$map),
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(breaks = 1:5, labels=c("foo","bar","baz","phi")),
fill=I("blue"))
qplot(factor(df$map),
geom="histogram",
binwidth = 0.3,
main = "Histogram of map usage",
xlab = "Map",
ylab = "Frequency",
scale_x_discrete(breaks = 1:5, labels=c("foo","bar","baz","phi", "wdwdw")),
fill=I("blue"))
qplot(map, data=df, geom="bar")
d <- qplot(map, data=df, geom="bar")
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("Fair" = "F","Good" = "G",
"Very Good" = "VG","Perfect" = "P","Ideal" = "I"))
d + scale_x_discrete("map", labels = c("lol", "wdwd", "wdwdwd", "ayylmao")
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("lol", "wdwd", "wdwdwd", "ayylmao")
d <- qplot(map, data=df, geom="bar")
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("lol", "wdwd", "wdwdwd", "ayylmao"))
d <- qplot(map, data=df, geom="bar")
d <- qplot(map, data=df, geom="bar")
d
d + scale_x_discrete("map", labels = c("lol", "wdwd", "wdwdwd", "ayylmao"))
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("Fair" = "F","Good" = "G",
"Very Good" = "VG","Perfect" = "P","Ideal" = "I"))
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("Fair" = "F","Good" = "G",
"Very Good" = "VG","Perfect" = "P"))
d <- qplot(map, data=df, geom="bar")
d + scale_x_discrete("map", labels = c("1" = "Kyhlo","Good" = "G",
"Very Good" = "VG","Perfect" = "P"))
d <- qplot(map, data=df, geom="bar") +
scale_x_discrete("map", labels = c("1" = "Kyhlo","Good" = "G",
"Very Good" = "VG","Perfect" = "P"))
qplot(map, data=df, geom="bar") +
scale_x_discrete("map", labels = c("1" = "Kyhlo","Good" = "G", "Very Good" = "VG","Perfect" = "P"))
qplot(map, data=df, geom="histogram")
qplot(map, data=df, geom="histogram") +
scale_x_discrete("map", labels = c("1" = "Kyhlo","Good" = "G", "Very Good" = "VG","Perfect" = "P"))
qplot(map, data=df, geom="histogram") +
scale_x_discrete(labels = c("1" = "Kyhlo","Good" = "G", "Very Good" = "VG","Perfect" = "P"))
qplot(map, data=df, geom="histogram") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","Good" = "G", "Very Good" = "VG","Perfect" = "P"))
qplot(map, data=df, geom="histogram") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram") + xlab = "Map" +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram") + xlab = "Map" +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram") + ylab = "ayy" +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", ylab="dwd") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", ylab="Count") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", xlab = "Map", ylab="Count") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm")) +
geom_bar(binwidth=1, stat="identity", fill="#705848")
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count", fill="#705848") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count", fill=I("#705848") +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count", fill=I("#705848")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count", fill=I("#705848")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count",
fill=I("blue")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
table(df$map)
table(df$map)[0]
table(df$map)[0:]
table(df$map)[1]
table(df$map)[1:]
table(df$map)
table(df$map)
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count",
fill=I("blue")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
prop.table(table(df$map)) #percentage of map
table(df$map)[1]
table(df$map)[1:2]
table(df$map)[1:2,]
table(df$map)[,1]
?dim
dim(table(df$map))
wdwd <- table(df$map)
wdwd
clear(wdwd)
remove(wdwd)
mapPercentage <- prop.table(table(df$map)) #percentage of map
colnames(mapPercentage) <- c("1", "2322", "wdwd", "wdwdwdw")
mapPercentage
library(ggplot2)
setwd("~/Development/R/GW2PvPAnalysis")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
#
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df$winner[df$red_score < df$blue_score] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'engi'] <- 2
df[5:14][df[5:14] == 'g'] <- 3
df[5:14][df[5:14] == 'mes'] <- 4
df[5:14][df[5:14] == 'necro'] <- 5
df[5:14][df[5:14] == 'ran'] <- 6
df[5:14][df[5:14] == 't'] <- 7
df[5:14][df[5:14] == 'war'] <- 8
#
table(df$map)
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count",
fill=I("blue")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
mapPercentage <- prop.table(table(df$map)) #percentage of map
library(ggplot2)
setwd("~/Development/R/GW2PvPAnalysis")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
#
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df$winner[df$red_score < df$blue_score] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'engi'] <- 2
df[5:14][df[5:14] == 'g'] <- 3
df[5:14][df[5:14] == 'mes'] <- 4
df[5:14][df[5:14] == 'necro'] <- 5
df[5:14][df[5:14] == 'ran'] <- 6
df[5:14][df[5:14] == 't'] <- 7
df[5:14][df[5:14] == 'war'] <- 8
#
table(df$map)
qplot(map, data=df, geom="histogram", main = "Histogram of map usage", xlab = "Map", ylab="Count",
fill=I("blue")) +
scale_x_discrete(breaks = 1:4, labels = c("1" = "Kyhlo","2" = "Niflhel", "3" = "Foefire",
"4" = "Silent Storm"))
mapPercentage <- prop.table(table(df$map)) #percentage of map
?table
table(winner)
table(df$winner)
names(df)
names(table(df$winner))
colnames(table(df$winner)) <- c("juande", "best")
?data.frame
scores <- data.frame(table(df$winner))
scores
names(table(df$winner))[1]
names(table(df$winner))[1]
names(table(df$winner))[1:]
names(table(df$winner))[1:,]
names(table(df$winner))[1,]
names(table(df$winner))[1]
names(table(df$winner))[,1]
table(df$winner)
table(df$winner)[1]
table(df$winner)[1,]
table(df$winner)[0,]
table(df$winner)[0]
table(df$winner)[1]
table(df$winner)[2]
table(df$winner)[2:]
table(df$winner)[1:2]
?tabl
?table
as.data.frame(table(df$winner))
table(df$winner, row.names = c("juande", "ayy"))
table(df$winner, row.names = c("juande"))
table(df$winner)
table(df$winner, row.names = c("1"))
table(df$winner, row.names = c("1", "2"))
table(df$winner, row.names = c("1", "2","3"))
table(df$winner, row.names = c("1", "2","3","4"))
table(df$winner, row.names = c("1", "2","3","4"<5))
table(df$winner, row.names = c("1", "2","3","4","5"))
table(df$winner, row.names = c("1", "2","3","4","5", "6"))
as.data.frame(df$winner)
as.data.frame(df$winner, responseName = "Freq")
as.data.frame(df$winner, responseName = "Freq", stringsAsFactors = TRUE)
as.data.frame(df$winner, responseName = "Freq", stringsAsFactors = TRUE, base = list(LETTERS))
as.data.frame(table(df$names))
as.data.frame(table(df$winner))
winnerdf <- as.data.frame(table(df$winner))
winnerdf
colnames(winnerdf) <- c("Map", "Freq")
winnerdf
dim(winnerdf)
winner[:1]
winnerdf[:1]
winnerdf[,1]
winnerdf[,1] <- c("Red team", "Blue team")
winnerdf
View(df)
winnerdf <- as.data.frame(table(df$winner))
winnerdf <- as.data.frame(table(df$winner))
colnames(winnerdf) <- c("Team", "Frequency")
winnerdf[,1] <- c("Red team", "Blue team")
winnerdf[,1] <- c("Red team", "Blue team")
winnerdf
summary(winnerdf)
plot(df$blue_score)
hist(df$blue_score)
df[df$winner == 1]
df[df$winner == 1,]
?pmax
