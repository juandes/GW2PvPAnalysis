nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 1)),]) / nrow(team.composition)
nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 1)),]) / nrow(team.composition)
nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 1)),]) / nrow(team.composition) * 100
sapply(1:8, function(class) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class)),]) / nrow(team.composition) * 100)
sapply(1:8, function(class) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class)),])
)
sapply(1:8, function(class) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class)),]))
sapply(1:8, function(class.number) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),]))
team.composition <- data.frame(class.1 = numeric(0), class.2 = numeric(0),
class.3 = numeric(0), class.4 = numeric(0),
class.5 = numeric(0))
red.team.composition <- df[5:9]
blue.team.composition <- df[10:14]
colnames(red.team.composition) <- c("class.1", "class.2", "class.3", "class.4",
"class.5")
colnames(blue.team.composition) <- c("class.1", "class.2", "class.3", "class.4",
"class.5")
team.composition <- rbind(team.composition, red.team.composition, blue.team.composition)
team.composition
ddply(team.composition,names(team.composition),summarize, Freq = length(class.1))
sapply(1:8, function(class.number) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),]))
sapply(1:8, function(class) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class)),]) / nrow(team.composition) * 100)
frequency.classes <- sapply(1:8, function(class.number) nrow(
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),]))
View(team.composition)
?action
View(map_and_winner)
View(df)
setwd("~/Development/R/GW2PvPAnalysis")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
#
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df[5:14][df[5:14] == 'engi'] <- 2
View(df)
?save
?write.table
write.table(df, "engi.csv")
write.table(df, "engi.csv", sep = ",")
setwd("~/Development/R/GW2PvPAnalysis")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
#
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df$winner[df$red_score < df$blue_score] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'engi'] <- 69
write.table(df, "engi.csv", sep = ",")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
View(df)
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df$winner[df$red_score < df$blue_score] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'engi'] <- 2
df[5:14][df[5:14] == 'g'] <- 3
df[5:14][df[5:14] == 'mes'] <- 4
df[5:14][df[5:14] == 'necro'] <- 5
df[5:14][df[5:14] == 'ran'] <- 6
df[5:14][df[5:14] == 't'] <- 7
df[5:14][df[5:14] == 'war'] <- 8
team.composition <- data.frame(class.1 = numeric(0), class.2 = numeric(0),
class.3 = numeric(0), class.4 = numeric(0),
class.5 = numeric(0))
team.composition <- data.frame(class.1 = numeric(0), class.2 = numeric(0),
class.3 = numeric(0), class.4 = numeric(0),
class.5 = numeric(0))
red.team.composition <- df[5:9]
blue.team.composition <- df[10:14]
colnames(red.team.composition) <- c("class.1", "class.2", "class.3", "class.4",
"class.5")
colnames(blue.team.composition) <- c("class.1", "class.2", "class.3", "class.4",
"class.5")
require(ggplot2)
require(reshape2)
setwd("~/Development/R/GW2PvPAnalysis")
df <- read.csv("~/Development/R/GW2PvPAnalysis/GW2_PvP_data.csv", stringsAsFactors=FALSE)
#
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
colnames(df) <- c('map', 'red_score', 'blue_score', 'winner', 'red_1', 'red_2', 'red_3',
'red_4', 'red_5', 'blue_1', 'blue_2', 'blue_3', 'blue_4', 'blue_5')
df$winner[df$red_score > df$blue_score] <- 0
df$winner[df$red_score < df$blue_score] <- 1
df[5:14][df[5:14] == 'ele'] <- 1
df[5:14][df[5:14] == 'engi'] <- 2
df[5:14][df[5:14] == 'g'] <- 3
df[5:14][df[5:14] == 'mes'] <- 4
df[5:14][df[5:14] == 'necro'] <- 5
df[5:14][df[5:14] == 'ran'] <- 6
df[5:14][df[5:14] == 't'] <- 7
df[5:14][df[5:14] == 'war'] <- 8
team.composition <- data.frame(class.1 = numeric(0), class.2 = numeric(0),
class.3 = numeric(0), class.4 = numeric(0),
class.5 = numeric(0))
red.team.composition <- df[5:9]
blue.team.composition <- df[10:14]
colnames(red.team.composition) <- c("class.1", "class.2", "class.3", "class.4", "class.5")
colnames(blue.team.composition) <- c("class.1", "class.2", "class.3", "class.4", "class.5")
View(blue.team.composition)
View(blue.team.composition)
View(red.team.composition)
View(df)
write.table(red.team.composition, "red.csv", sep = ",")
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),] #WORKS!!!
colnames(red.team.composition) <- c("class.1", "class.2", "class.3", "class.4", "class.5")
colnames(blue.team.composition) <- c("class.1", "class.2", "class.3", "class.4", "class.5")
team.composition <- rbind(team.composition, red.team.composition, blue.team.composition)
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),] #WORKS!!!
write.table(red.team.composition, "red.csv", sep = ",", col.names = FALSE)
write.table(red.team.composition, "red.csv", sep = ",", col.names = FALSE, row.names = FALSE)
write.table(blue.team.composition, "blue.csv", sep = ",", col.names = FALSE, row.names = FALSE)
team.composition <- rbind(team.composition, red.team.composition, blue.team.composition)
write.table(team.composition, "tc.csv", sep = ",", col.names = FALSE, row.names = FALSE)
remove(team.composition)
team.composition <- rbind(team.composition, red.team.composition, blue.team.composition)
team.composition <- data.frame(class.1 = numeric(0), class.2 = numeric(0),
class.3 = numeric(0), class.4 = numeric(0),
class.5 = numeric(0))
team.composition <- rbind(team.composition, red.team.composition, blue.team.composition)
write.table(team.composition, "tc.csv", sep = ",", col.names = FALSE, row.names = FALSE)
ddply(team.composition,names(team.composition),summarize, Freq = length(class.1)) # Frequency
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),])
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),]
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),]
engis <- team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),]
write.table(engi, "engi.csv", sep = ",", col.names = FALSE, row.names = FALSE)
write.table(engi, "engis.csv", sep = ",", col.names = FALSE, row.names = FALSE)
write.table(engis, "engis.csv", sep = ",", col.names = FALSE, row.names = FALSE)
engis
table(engies)
table(engis)
engis
ddply(team.composition,names(team.composition),summarize, Freq = length(class.1)) # Frequency
?count
count(engis, var = 2)
count(engis, var = 1)
count(engis, var = 3)
?count
unlist(engis)
?length
length(1:10)
length(unlist(engies))
length(unlist(engis))
dim(engis)
57 * 5
?count
?ddply
unlist.engis <- unlist(engies)
unlist.engis <- unlist(engis)
unlist.engis
summary(unlist.engis)
?sum
sum(df)
team.composition[apply(team.composition, 1, function(X) any(table(X) >= 4)),]
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),] #WORKS!!!
ddply(team.composition,names(team.composition),summarize, Freq = length(class.1)) # Frequency
?apply
apply(mat, 1, sum, na.rm=TRUE)
apply(team.composition, 1, sum, na.rm=TRUE)
apply(team.composition, 1, function(x), x == 2)
apply(team.composition, 1, function(x) x == 2)
apply(team.composition, 1, function(x) x == '2')
apply(team.composition, 1, function(x) x == "2")
engis
?sapply
sapply(engis, function(x) x == 1)
sapply(engis, function(x) sum(x == 1)
)
sapply(engis, function(x) sum(x == 1))
sum(sapply(engis, function(x) sum(x == 1)))
View(engis)
View(engis)
sum(sapply(engis, function(x) sum(x == 1)))engis
engis
sum(sapply(engis, function(x) sum(x == 2)))engis
sum(sapply(engis, function(x) sum(x == 2)))
sapply(1:8, function(class.number) nrow(team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),]))
sapply(1:8, function(class.number) team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),])
lol <- sapply(1:8, function(class.number) team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == class.number)),])
View(lol)
sum(sapply(engis, function(x) sum(x == 2)))
sum(sapply(team.composition, function(x) sum(x == 2)))
sapply(1:8, function(class.number) sum(sapply(team.composition, function(x) sum(x == class.number))))
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 2)),] #WORKS!!!
sapply(1:8, function(class.number) sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.classes <- sapply(1:8, function(class.number) sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.classes <- sapply(1:8, function(class.number) sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.classes
as.data.frame(frequency.classes)
frequency.classes <- as.data.frame(sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number)))))
rownames(frequency.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
frequency.classes
frequency.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.classes <- as.data.frame(frequency.classes)
View(frequency.classes)
rownames(frequency.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
frequency.classes
frequency.classes <- as.data.frame(frequency = frequency.classes)
colnames(frequency.classes) <- c("Frequency")
frequency.classes
sum(frequency.classes$Frequency)
1173 + 17
1190 / 119
colnames(frequency.percentage.classes) <- c("Frequency", "Percentage")
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency", "Percentage")
frequency.percetage.classes$dwdw <- NULL
View(frequency.percentage.classes)
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency", "Percentage")
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency")
frequency.percentage.classes
frequency.percentage.classes$per
frequency.percentage.classes$per <- NULL
View(frequency.percentage.classes)
frequency.percentage.classes$per <- 1:8
View(frequency.percentage.classes)
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency")
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency /
sum(frequency.percentage.classes$Frequency) + 17
View(frequency.percentage.classes)
sum(frequency.percentage.classes$Frequency)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(frequency.percentage.classes$Frequency + 17)*100
frequency.classes
View(frequency.percentage.classes)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency + 17))*100
View(frequency.percentage.classes)
frequency.percentage.classes$Percentage <- round(frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency + 17))*100, 2)
View(frequency.percentage.classes)
sum(frequency.percentage.classes$Percentage)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency + 17))*100 # 17 missing players
View(frequency.percentage.classes)
sum(frequency.percentage.classes$Percentage)
sum(frequency.percentage.classes$Frequency)
113 / 1200
113 / 1200 * 100
113 / 1173 * 100
299 / 1173 * 100
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency")
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency + 17))*100 # 17 missing players
```
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency")
View(frequency.percentage.classes)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency + 17))*100 # 17 missing players
```
- What's the outcome of the match when a team is made of 4 or more of the same profession?
View(frequency.percentage.classes)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency))*100 # 17 missing players.
View(frequency.percentage.classes)
sum(frequency.percentage.classes$Percentage)
sum(frequency.percentage.classes$Frequency)
sum(frequency.percentage.classes$Frequency + 17)
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency) + 17) * 100 # 17 missing players.
View(frequency.percentage.classes)
sum(frequency.percentage.classes$Percentage)
17 / 1200
17 / 1200 * 100
+ 1
frequency.percentage.classes <- sapply(1:8, function(class.number)
sum(sapply(team.composition, function(x) sum(x == class.number))))
frequency.percentage.classes <- as.data.frame(frequency.percentage.classes)
rownames(frequency.percentage.classes) <- c("Elementalist", "Engineer", "Guardian", "Mesmer",
"Necromancer", "Ranger", "Thief", "Warrior")
colnames(frequency.percentage.classes) <- c("Frequency")
frequency.percentage.classes$Percentage <- frequency.percentage.classes$Frequency/(sum(frequency.percentage.classes$Frequency) + 17) * 100 # 17 missing players.
frequency.percentage.classes
sum(sapply(team.composition, function(x) sum(x == 0)))
team.composition[apply(team.composition, 1, function(X) any(as.numeric(X) == 0)),]
team.composition[apply(team.composition, 1, function(X) any(table(X) >= 4)),]
team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
as.numeric(rownames(team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]))
ddply(team.composition,names(team.composition),summarize, Freq = length(class.1)) # Frequency
frequent.teams <- ddply(team.composition,names(team.composition),summarize, Freq = length(class.1))
frequent.teams[frequent.teams$Freq > 1,]
frequent.teams[1:5]
frequent.teams <- frequent.teams[frequent.teams$Frequency > 1,]
frequent.teams[1:5]
View(frequent.teams)
frequent.teams <- ddply(team.composition,names(team.composition),summarize,
Frequency = length(class.1))
View(frequent.teams)
frequent.teams <- frequent.teams[frequent.teams$Frequency > 1,]
View(frequent.teams)
frequent.teams[1:5]
frequent.teams[1:5][frequent.teams[1:5] == 5] <- "Necromancer"
View(frequent.teams)
frequent.teams[1:5][frequent.teams[1:5] == 5] <- "Necromancer"
frequent.teams[1:5][frequent.teams[1:5] == 8] <- "Warrior"
frequent.teams[1:5][frequent.teams[1:5] == 6] <- "Ranger"
frequent.teams[1:5][frequent.teams[1:5] == 1] <- "Elementalist"
frequent.teams[1:5][frequent.teams[1:5] == 7] <- "Thief"
frequent.teams[1:5][frequent.teams[1:5] == 3] <- "Guardian"
View(frequent.teams)
team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
three.or.more <- team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
indexes.of.three.or.more <- as.numeric(rownames(three.or.more))
View(three.or.more)
sapply(indexes.of.three.or.more, function(x) if x > 119 x - 119)
sapply(indexes.of.three.or.more, function(x) if x > 119 {x - 119})
sapply(indexes.of.three.or.more, function(x) if (x > 119) {x - 119})
sapply(indexes.of.three.or.more, function(x) if (x > 119) x - 119)
sapply(indexes.of.three.or.more, function(x) x)
sapply(indexes.of.three.or.more, function(x) x - 119 )
indexes.of.three.or.more[x]
sapply(indexes.of.three.or.more, function(x) if (x > 119) x - 119)
sapply(indexes.of.three.or.more, function(x) if (x > 119) x - 119 else x)
sapply(indexes.of.three.or.more, function(x) if (x > 119) { x - 119 }  else x)
indexes.of.three.or.more
View(df)
team.composition.result <- rbind(team.composition.result, df[4], df[4])
team.composition.result <- data.frame(result = numeric(0))
team.composition.result <- rbind(team.composition.result, df[4], df[4])
View(team.composition.result)
team.composition.result[indexes.of.three.or.more]
team.composition.result[indexes.of.three.or.more,]
three.or.more <- team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
View(three.or.more)
team.composition.result[as.numeric(rownames(three.or.more)),]
cbind(three.or.more, team.composition.result)
cbind(three.or.more, team.composition.result[as.numeric(rownames(three.or.more)),])
three.or.more <- team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
View(three.or.more)
cbind(three.or.more, result = team.composition.result[as.numeric(rownames(three.or.more)),])
team.composition.result[as.numeric(rownames(three.or.more)),]
three.or.more <- cbind(three.or.more,
result = team.composition.result[as.numeric(rownames(three.or.more)),])
View(three.or.more)
sapply(three.or.more, function(x) rownames(x))
indexes.of.three.or.more <- as.numeric(rownames(three.or.more))
sapply(three.or.more, function(x) as.numeric(rownames(x)))
View(team.composition.result)
View(team.composition)
View(three.or.more)
View(team.composition)
View(three.or.more)
team.composition.result[as.numeric(rownames(three.or.more)),]
three.or.more.result <- team.composition.result[as.numeric(rownames(three.or.more)),]
1:10
rep.int(0, 119)
three.or.more.teams <- rbind(three.or.more.teams, rep.int(0, 119), rep.int(1, 119))
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams <- rbind(three.or.more.teams, rep.int(0, 119), rep.int(1, 119))
View(three.or.more.teams)
remove(three.of.more.teams)
remove(three.or.more.teams)
three.or.more.teams <- c(rep.int(0, 119), rep.int(1, 119))
View(team.composition.result)
remove(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams <- rbind(three.or.more.teams, rep.int(0, 119), rep.int(1, 119))
View(three.or.more.teams)
remove(three.or.more.teams)
three.or.more.teams <- rbind(three.or.more.teams, rep.int(0, 119))
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams <- rbind(three.or.more.teams, rep.int(0, 119))
View(three.or.more.teams)
rep.int(0, 119)
as.vector(rep.int(0, 119))
?type
type(rep.int(0, 119))
typeof(rep.int(0, 119))
typeof(as.vector(rep.int(0, 119)))
three.or.more.teams <- c(rep.int(0, 119), rep.int(1, 119))
three.or.more <- team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
# Get the result of the matches. We are using df[4] twice because of the structure
# of team.composition dataframe
team.composition.result <- data.frame(result = numeric(0))
team.composition.result <- rbind(team.composition.result, df[4], df[4])
View(three.or.more)
three.or.more <- cbind(three.or.more,
result = team.composition.result[as.numeric(rownames(three.or.more)),])
View(three.or.more)
three.or.more.teams[1]
three.or.more.teams[2]
three.or.more <- cbind(three.or.more,
team = three.or.more.teams[as.numeric(rownames(three.or.more)),])
three.or.more.teams <- data.frame(result = numeric(0))
?as.vector
three.or.more.teams$team <- c(rep.int(0, 119), rep.int(1, 119))
three.or.more.teams$team <- as.vector(c(rep.int(0, 119), rep.int(1, 119)))
rep(1,100)
three.or.more.teams$team <- rep(1,100)
three.or.more.teams$team <- cbind(rep(1,100))
View(three.or.more.teams)
View(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(0))
View(three.or.more.teams)
three.or.more.teams$team <- cbind(rep(1,100))
three.or.more.teams$team <- rbind(rep(1,100))
View(three.or.more.teams)
three.or.more.teams$team <- rbind(three.of.more.team, rep(1,100))
three.or.more.teams$team <- rbind(three.of.more.teams, rep(1,100))
three.or.more.teams$team <- rbind(three.or.more.teams, rep(1,100))
three.or.more.teams$team <- cbind(three.or.more.teams, rep(1,100))
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams$team <- cbind(three.or.more.teams, rep(1,100))
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams$team <- rbind(three.or.more.teams, rep(1,100))
View(three.or.more)
three.or.more.teams <- c(rep.int(0, 119), rep.int(1, 119))
three.or.more <- cbind(three.or.more,
team = three.or.more.teams[as.numeric(rownames(three.or.more)),])
main$newcol <- rep(1,nrow(main))
remove(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(0))
three.or.more.teams$newcol <- rep(1,nrow(three.or.more.teams))
View(three.or.more.teams)
?rep
three.or.more.teams <- data.frame(team = numeric(238))
View(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(1:20))
View(three.or.more.teams)
remove(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(1:20))
length(team.composition)
three.or.more.teams <- data.frame(team = numeric(nrow(team.composition)))
View(three.or.more.teams)
three.or.more.teams$team[120:, ]
three.or.more.teams$team[120: ]
three.or.more.teams$team
three.or.more.teams$team[three.or.more.teams$team, ]
three.or.more.teams$team[,3
]
three.or.more.teams$team[,3]
three.or.more.teams$team[3,]
three.or.more.teams$team[1,]
three.or.more.teams$team[,1]
three.or.more.teams$team[1]
three.or.more.teams$team[1:2]
three.or.more.teams$team[120]
three.or.more.teams$team[120:]
three.or.more.teams$team[120: nrow(three.or.more.teams)]
three.or.more.teams$team[120: nrow(three.or.more.teams)] <- 1
View(three.or.more.teams)
remove(three.or.more.teams)
three.or.more.teams <- data.frame(team = numeric(nrow(team.composition)))
three.or.more.teams$team[120: nrow(three.or.more.teams)] <- 1
View(three.or.more.teams)
View(df)
three.or.more <- cbind(three.or.more,
team = three.or.more.teams[as.numeric(rownames(three.or.more)),])
View(three.or.more)
View(df)
three.or.more
three.or.more <- team.composition[apply(team.composition, 1, function(X) any(table(X) >= 3)),]
# Get the result of the matches. We are using df[4] twice because of the structure
# of team.composition dataframe
team.composition.result <- data.frame(result = numeric(0))
team.composition.result <- rbind(team.composition.result, df[4], df[4])
# Get the result of the particular matches using the indexes of three.or.more
three.or.more <- cbind(three.or.more,
result = team.composition.result[as.numeric(rownames(three.or.more)),])
three.or.more
231 - 119
219 - 119
200 - 119
163 - 119
138 - 119
?ddply
library(wd)
library(dplyr)
frequent.teams <- ddply(team.composition,names(team.composition),summarize,
Frequency = length(class.1))
library(plyr)
